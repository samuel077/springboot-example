name: Build and Deploy Docker Image

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/trending-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout source code
        uses: actions/checkout@v3

      - name: 🔢 Extract version from Gradle
        id: version
        run: |
          VERSION=$(./gradlew properties -q | grep "^version:" | awk '{ print $2 }')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Detected version: $VERSION"

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔐 Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build and push versioned image
        run: |
          docker build -t $IMAGE_NAME:$VERSION .
          docker push $IMAGE_NAME:$VERSION

      - name: 📤 Upload docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: |
            docker-compose.yml
            alertmanager.yml
          target: /home/ec2-user/app/

      - name: 🚀 Update .env and deploy on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ec2-user/app

            echo "✅ Updating .env IMAGE_TAG..."
            sed -i '/^IMAGE_TAG=/d' .env
            echo "IMAGE_TAG=${{ env.VERSION }}" >> .env

            echo "🚀 Redeploying with new image..."
            docker-compose pull
            docker-compose down
            docker-compose up -d
